my $expedition_name_prefix = "DZ - ";
my $min_players = 1;
my $max_players = 12;
my $dz_duration = 28800;

my %zones = (
    "tutorialb" => "The Mines of Gloomingdeep",
    "befallen" => "Befallen",
    "unrest" => "The Estate of Unrest",
    "najena" => "Najena",
    "hateplaneb" => "Plane of Hate",
    "highpasshold" => "Highpass Hold",
    "warrens" => "The Warrens",
    "paw" => "The Lair of Paw",
    "mistmoore" => "Mistmoore",
    "kedge" => "Kedge Keep",
    "gukbottom" => "Lower Guk",
    "soldungb" => "Nagafen's Lair",
    "permafrost" => "Permafrost",
    "hole" => "The Hole",
    "fearplane" => "The Plane of Fear",
    "airplane" => "The Plane of Sky",
    "kurn" => "Kurn's Tower",
    "kaesora" => "Kaesora",
    "droga" => "The Temple of Droga",
    "nurga" => "The Mines of Nurga",
    "dalnir" => "The Crypt of Dalnir",
    "charasis" => "The Howling Stones",
    "citymist" => "The City of Mist",
    "veksar" => "Veksar",
    "karnor" => "Karnor's Castle",
    "chardok" => "Chardok",
    "burningwood" => "Burning Woods",
    "kerraridge" => "Kerraridge",
    "timorous" => "Timorous Deep",
    "skyfire" => "Skyfire Mountains",
    "veeshan" => "Veeshan's Peak",
    "frozenshadow" => "The Tower of Frozen Shadow",
    "crystal" => "The Crystal Caverns",
    "velketor" => "Velketor's Labyrinth",
    "sirens" => "Siren's Grotto",
    "kael" => "Kael Drakkel",
    "westwastes" => "The West Wastes",
    "necropolis" => "Dragon Necropolis",
    "growthplane" => "Plane of Growth",
    "sleeper" => "Sleeper's Tomb",
    "brellsarena" => "Wave Event",
    "arena" => "The Arena",
    "runnyeye" => "Runnyeye",
    "blackburrow" => "Blackburrow",
    "oceanoftears" => "Easter Island",
    "templeveeshan" => "Temple of Veeshan",
);

my %zone_versions = (
    # "oceanoftears" => {
    #     0 => "Easter Island Beginners Lvl 30",
    #     1 => "Easter Island Level 60 Sebilis Era",
    #     2 => "Easter Island End Game",
    # },
    "templeveeshan" => {
        0 => "Temple of Veeshan",
        #1 => "Temple of Veeshan 1",
    },
    "citymist" => 1,
    "droga" => 1,
    "nurga" => 1,
    "sirens" => 1,
    "paw" => 1,
);

sub EVENT_SAY {
    if ($text =~ /ready/i) {
        my $dz = $client->GetExpedition();
        if ($dz) {
            my $zone_short_name = $dz->GetZoneName();
            plugin::Whisper("Teleporting you to your dynamic zone: $zone_short_name.");
            $client->MovePCDynamicZone($zone_short_name);
        } else {
            plugin::Whisper("You don't have an active dynamic zone. Please create one first.");
        }
        return;
    }

    if ($text =~ /hail/i) {
        plugin::Whisper("Greetings, adventurer. Would you like to create a dynamic zone? Say [list zones] to see all available zones or tell me the zone name you'd like to explore.");
    } elsif ($text =~ /list zones(?: (\d+))?/i) {
        plugin::Whisper("Available Dynamic Zones:");

        plugin::Whisper("Antonica Zones:");
        foreach my $short_name (qw/tutorialb befallen unrest najena hateplaneb highpasshold warrens paw mistmoore kedge gukbottom soldungb permafrost hole fearplane airplane/) {
            plugin::Whisper("  - " . quest::saylink($zones{$short_name}, 1, "$zones{$short_name} ($short_name)"));
        }

        plugin::Whisper("Kunark Zones:");
        foreach my $short_name (qw/kurn kaesora droga nurga dalnir charasis citymist veksar karnor chardok veeshan burningwood kerraridge timorous skyfire/) {
            plugin::Whisper("  - " . quest::saylink($zones{$short_name}, 1, "$zones{$short_name} ($short_name)"));
        }

        plugin::Whisper("Velious Zones:");
        foreach my $short_name (qw/frozenshadow crystal velketor sirens kael westwastes necropolis growthplane sleeper templeveeshan/) {
            plugin::Whisper("  - " . quest::saylink($zones{$short_name}, 1, "$zones{$short_name} ($short_name)"));
        }

        plugin::Whisper("Event Zones:");
        foreach my $short_name (qw/brellsarena arena runnyeye blackburrow/) {
            plugin::Whisper("  - " . quest::saylink($zones{$short_name}, 1, "$zones{$short_name} ($short_name)"));
        }

        # plugin::Whisper("Easter Island:");
        # my @ordered_versions = (
        #     "Easter Island Beginners Lvl 30",
        #     "Easter Island Level 60 Sebilis Era",
        #     "Easter Island End Game",
        # );

        foreach my $version_name (@ordered_versions) {
            plugin::Whisper("  - " . quest::saylink($version_name, 1, $version_name));
        }

        plugin::Whisper("Temple of Veeshan Versions:");
        my @temple_versions = (
            "Temple of Veeshan",
            #"Temple of Veeshan 1",
        );
        foreach my $version_name (@temple_versions) {
            plugin::Whisper("  - " . quest::saylink($version_name, 1, $version_name));
        }

        plugin::Whisper("Click on a zone name or say its name to create a DZ.");
    }

    elsif ($text =~ /^(Easter Island .+)$/i) {
        my $zone_name = $1;

        foreach my $version (keys %{$zone_versions{"oceanoftears"}}) {
            if ($zone_versions{"oceanoftears"}->{$version} eq $zone_name) {
                my $expedition_name = $expedition_name_prefix . "oceanoftears";
                my $dz = $client->CreateExpedition("oceanoftears", $version, $dz_duration, $expedition_name, $min_players, $max_players);
                if ($dz) {
                    plugin::Whisper("Dynamic zone for '$zone_name' created successfully. Tell me when you're [" . quest::saylink("ready", 1, "ready") . "] to enter.");
                } else {
                    plugin::Whisper("There was an issue creating your dynamic zone. Please try again.");
                }
                return;
            }
        }

        plugin::Whisper("I'm sorry, but '$zone_name' is not a valid choice. Please select a valid version.");
    }

     elsif ($text =~ /^(Temple of Veeshan \d)$/i) {
        my $zone_name = $1;

        foreach my $version (keys %{$zone_versions{"templeveeshan"}}) {
            if ($zone_versions{"templeveeshan"}->{$version} eq $zone_name) {
                my $expedition_name = $expedition_name_prefix . "templeveeshan";
                my $dz = $client->CreateExpedition("templeveeshan", $version, $dz_duration, $expedition_name, $min_players, $max_players);
                if ($dz) {
                    plugin::Whisper("Dynamic zone for '$zone_name' created successfully. Tell me when you're [" . quest::saylink("ready", 1, "ready") . "] to enter.");
                } else {
                    plugin::Whisper("There was an issue creating your dynamic zone. Please try again.");
                }
                return;
            }
        }

        plugin::Whisper("I'm sorry, but '$zone_name' is not a valid choice. Please select a valid version.");
    }

    elsif ($text =~ /^(.*)$/i) {
        my $zone_input = $1;
        my $zone_found = 0;

        foreach my $zone_name (keys %zones) {
            if ($zone_input =~ /\Q$zones{$zone_name}\E/i) {
                my $version = 0;

                if (exists $zone_versions{$zone_name}) {
                    if ($zone_versions{$zone_name} == 1) {
                        $version = 1;
                    }
                }

                my $expedition_name = $expedition_name_prefix . $zone_name;
                my $dz = $client->CreateExpedition($zone_name, $version, $dz_duration, $expedition_name, $min_players, $max_players);
                if ($dz) {
                    plugin::Whisper("Dynamic zone for '$zone_name' created successfully. Tell me when you're [" . quest::saylink("ready", 1, "ready") . "] to enter.");
                } else {
                    plugin::Whisper("There was an issue creating your dynamic zone. Please try again.");
                }
                $zone_found = 1;
                last;
            }
        }

        if (!$zone_found) {
            plugin::Whisper("I'm sorry, but '$zone_input' is not a valid zone name. Say [list zones] to see the available options.");
        }
    }
}