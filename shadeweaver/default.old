my $wrath_triggered = 0;  # Global flag to prevent multiple triggers

sub EVENT_COMBAT {
    if ($combat_state == 1) {
        quest::settimer("silence_sk", 30);
    } else {
        quest::stoptimer("silence_sk");
    }
}

sub EVENT_TIMER {
    if ($timer eq "silence_sk") {
        my @hate_list = $npc->GetHateList();
        foreach my $hate_entry (@hate_list) {
            my $ent = $hate_entry->GetEnt();
            if ($ent && $ent->IsClient()) {
                my $pc = $ent->CastToClient();
                if ($pc->GetClass() == 5) {  # Shadowknight
                    $npc->CastSpell(12431, $pc->GetID()); # Silence
                    $npc->Shout("Your dark magic falters, Shadowknight!");
                }
            }
        }
    }
}

sub EVENT_DAMAGE_TAKEN {
    my $attacker = $entity_list->GetMobByID($clientid);
    if ($attacker && $attacker->IsClient()) {
        my $pc = $attacker->CastToClient();
        if ($pc->GetClass() == 5) {  # Shadowknight
            $damage = int($damage * 0.5);  # Reduce Shadowknight damage by 50%
        }
    }

    # Wrath of Luclin trigger at 10% HP
    if (!$wrath_triggered && $npc->GetHP() <= ($npc->GetMaxHP() * 0.10)) {
        $wrath_triggered = 1;  # Set flag BEFORE chance to prevent multiple rolls
        if (quest::ChooseRandom(1..100) <= 20) {  # 20% chance
            $npc->Shout("The Wrath of Luclin is unleashed!");

            my $npc_x = $npc->GetX();
            my $npc_y = $npc->GetY();
            my $npc_z = $npc->GetZ();
            my $radius = 50;
            my $wrath_dmg = 35000;

            # Damage players
            foreach my $entity ($entity_list->GetClientList()) {
                my $distance = $entity->CalculateDistance($npc_x, $npc_y, $npc_z);
                if ($distance <= $radius) {
                    $entity->Damage($npc, $wrath_dmg, 0, 1, false);
                }
            }

            # Damage bots
            foreach my $bot ($entity_list->GetBotList()) {
                my $distance = $bot->CalculateDistance($npc_x, $npc_y, $npc_z);
                if ($distance <= $radius) {
                    $bot->Damage($npc, $wrath_dmg, 0, 1, false);
                }
            }

            # Damage player pets
            foreach my $entity ($entity_list->GetClientList()) {
                my $pet = $entity->GetPet();
                if ($pet) {
                    my $distance = $pet->CalculateDistance($npc_x, $npc_y, $npc_z);
                    if ($distance <= $radius) {
                        $pet->Damage($npc, $wrath_dmg, 0, 1, false);
                    }
                }
            }

            # Damage bot pets
            foreach my $bot ($entity_list->GetBotList()) {
                my $pet = $bot->GetPet();
                if ($pet) {
                    my $distance = $pet->CalculateDistance($npc_x, $npc_y, $npc_z);
                    if ($distance <= $radius) {
                        $pet->Damage($npc, $wrath_dmg, 0, 1, false);
                    }
                }
            }
        }
    }

    return $damage;
}